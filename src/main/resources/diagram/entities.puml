@startuml Entities

' Abstract base entities
abstract class AbstractPersistableEntity {
    id: Long
}

abstract class AbstractAuditEntity {
    createdAt: LocalDateTime
    updatedAt: LocalDateTime
    createdBy: String
    updatedBy: String
}

abstract class AbstractStatusAwareEntity {
    status: int
    isActive(): boolean
    activate()
    deactivate()
}

' Main entities
class User {
    username: String
    password: String
    firstName: String
    lastName: String
    fullName: String
    email: String
    phoneNumber: String
    phone: String
    department: String
    position: String
    refreshToken: String
    metadata: String
    enabled: boolean
    accountNonLocked: boolean
    accountNonExpired: boolean
    credentialsNonExpired: boolean
    failedAttempts: int
    accountLocked: boolean
    lockedUntil: LocalDateTime
    passwordExpired: boolean
}

class Role {
    name: String
}

class Event {
    name: String
    code: String
    description: String
    startTime: LocalDateTime
    endTime: LocalDateTime
    initialSpins: Integer
    dailySpinLimit: Integer
    defaultWinProbability: Double
    metadata: String
}

class EventLocation {
    name: String
    code: String
    description: String
    initialSpins: Integer
    dailySpinLimit: Integer
    defaultWinProbability: Double
    metadata: String
}

class Region {
    name: String
    code: String
    description: String
    metadata: String
}

class Province {
    name: String
    code: String
    description: String
}

class Participant {
    name: String
    code: String
    phone: String
    email: String
    metadata: String
}

class ParticipantEvent {
    totalSpins: Integer
    remainingSpins: Integer
    initialSpins: Integer
    metadata: String
}

class Reward {
    name: String
    code: String
    description: String
    points: Integer
    pointsRequired: Integer
    totalQuantity: Integer
    remainingQuantity: Integer
    dailyLimit: Integer
    dailyCount: Integer
    winProbability: Double
    validFrom: LocalDateTime
    validUntil: LocalDateTime
    metadata: String
}

class GoldenHour {
    name: String
    description: String
    startTime: LocalDateTime
    endTime: LocalDateTime
    winProbability: Double
    metadata: String
}

class SpinHistory {
    timestamp: LocalDateTime
    win: Boolean
    pointsEarned: Integer
    pointsSpent: Integer
    metadata: String
}

' Inheritance relationships
AbstractPersistableEntity <|-- AbstractAuditEntity
AbstractAuditEntity <|-- AbstractStatusAwareEntity
AbstractStatusAwareEntity <|-- User
AbstractStatusAwareEntity <|-- Role
AbstractStatusAwareEntity <|-- Event
AbstractStatusAwareEntity <|-- EventLocation
AbstractStatusAwareEntity <|-- Region
AbstractStatusAwareEntity <|-- Province
AbstractStatusAwareEntity <|-- Participant
AbstractStatusAwareEntity <|-- ParticipantEvent
AbstractStatusAwareEntity <|-- Reward
AbstractStatusAwareEntity <|-- GoldenHour
AbstractStatusAwareEntity <|-- SpinHistory

' Entity relationships
User "1" *-- "1" Participant
User "1" -- "*" Role
Role "*" -- "*" User
Event "1" -- "*" EventLocation
EventLocation "1" -- "*" ParticipantEvent
EventLocation "1" -- "*" Reward
EventLocation "1" -- "*" GoldenHour
EventLocation "1" -- "*" SpinHistory
Region "1" -- "*" Province
Region "1" -- "*" EventLocation
Participant "1" -- "*" ParticipantEvent
Participant "1" -- "*" SpinHistory
ParticipantEvent "1" -- "*" SpinHistory
Reward "1" -- "*" SpinHistory
GoldenHour "1" -- "*" SpinHistory

@enduml
